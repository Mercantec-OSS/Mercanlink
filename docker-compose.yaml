services:
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "9301:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - DEFAULT_CONNECTION=${DEFAULT_CONNECTION}
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - JWT_EXPIRY_MINUTES=${JWT_EXPIRY_MINUTES}
      - JWT_REFRESH_TOKEN_EXPIRY_DAYS=${JWT_REFRESH_TOKEN_EXPIRY_DAYS}
      - DISCORD_MODCHANNELID=${DISCORD_MODCHANNELID}
      - DISCORD_KNOWLEDGECENTERCHANNELID=${DISCORD_KNOWLEDGECENTERCHANNELID}
      - DISCORD_MODROLEID=${DISCORD_MODROLEID}
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./React/frontend
      dockerfile: Dockerfile
    ports:
      - "9302:80"
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: